---
import '../styles/global.scss'
import { fade, ViewTransitions } from 'astro:transitions';
import { getLangFromUrl, getUrlWithLang, useTranslation } from '../i18n/utils'
export interface Props {
  title: string
  description: string
  keywords: string
}
Astro.response.headers.set("petter", "Hoel")
const language = getLangFromUrl(Astro.url);
const t = useTranslation(language);
const labelOpen = t('nav.labelOpen')
const labelClosed = t('nav.labelClosed')

const langSwithUrl = getUrlWithLang(Astro.url);

const { title, keywords, description } = Astro.props
const currentPath = Astro.request.url ? new URL(Astro.request.url)?.pathname : '';

const normalize = (value: string): string => {

  if (!value) {
    return ''
  }
  if (value.startsWith('/')) {
    value = value.substring(1, value.length)
  }

  if (value.endsWith('/')) {
    value = value.substring(0, value.length - 1)
  }

  return value.toLowerCase();
}

const active = (linkHref: string): string => {
  return normalize(currentPath) === normalize(linkHref) ? 'active' : ''
}
---

<!DOCTYPE html>
<html lang="no">
  <head>
    <meta charset="UTF-8" />
    <ViewTransitions />
    <meta name="viewport" content="width=device-width" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Nunito:ital,wght@0,300;0,500;1,300;1,500&display=swap" rel="stylesheet">
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="description" content={description} />
    <meta name="keywords" content={keywords} />
    <title>{title}</title>
  </head>
  <body>


    <header id="site-header">
      <label
        id="nav-toggle-label"
        class="nav-toggle-label">
        <span id='label-text' class='screen-reader-only'>{labelClosed}</span>
        <input
          type="checkbox"
          id="nav-toggle"
          name="nav-toggle"
          class="nav-toggle"/>
        <span class='icon' id='nav-toggle-icon'>
          <span class='icon-part'></span>
          <span class='icon-part'></span>
          <span class='icon-part'></span>
        </span>
      </label>
      <h1 class="logo text-gradient">
        <a href={`/${language}`}>Ã˜ystein Blegen Hoel</a>
      </h1>
    </header>
    <aside id="sidenav">
      <nav>
        <menu>
          <li>
            <a href={`/${language}`} class={active(`/${language}`)}>{t('nav.home')}</a>
          </li>
          <li>
            <a href={`/${language}/biography`} class={active(`/${language}/biography`)}>{t('nav.bio')}</a>
          </li>
          <li>
            <a href={`/${language}/about-works`} class={active(`/${language}/about-works`)}>{t('nav.about')}</a>
          </li>
          <li>
            <a href={langSwithUrl}>{t('nav.languageSwitcher')}</a>
          </li>
        </menu>
      </nav>
      <button id='close-button' type='button'><span class='screen-reader-only'>{ labelOpen} { labelClosed.toLowerCase() }</span></button>
    </aside>
    <main transition:animate={fade({duration:'200ms'})}>
      <slot />
    </main>

    <script define:vars={{ labelOpen, labelClosed }}>
      const toggleIcon = () => {
        const input = document.querySelector('#nav-toggle');
        const body = document.querySelector('body');
        const labelTextSpan = document.querySelector('#label-text')
        const iconWrapper = document.querySelector('#nav-toggle-icon')
        const main = document.querySelector('main')
        const sideNav = document.querySelector('#sidenav')
        if (!input?.checked) {
          labelTextSpan.innerText = labelClosed
          iconWrapper.classList.remove('checked')
          main.removeAttribute('inert')
          sideNav.classList.remove('open')
          body.classList.remove('no-scroll')
        } else {
          labelTextSpan.innerText = labelOpen
          iconWrapper.classList.add('checked')
          main.setAttribute('inert', true)
          sideNav.classList.add('open')
          body.classList.add('no-scroll')
        }
      }

      const closeSidebar = () => {
        const input = document.querySelector('#nav-toggle');
        input?.checked ? input.click() : null
      }

      document.addEventListener('astro:page-load', () => {
        const navToggle = document.querySelector('#nav-toggle');
        navToggle.addEventListener('click', toggleIcon);
        const closeButton = document.querySelector('#close-button')
        closeButton.addEventListener('click', closeSidebar)
        const navlinks = document.querySelectorAll('#sidenav a')
        navlinks.forEach(link => link.addEventListener('click', closeSidebar))
      }, { once: false });
    </script>
  </body>
</html>
