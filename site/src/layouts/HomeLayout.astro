---
import { useTranslation } from '../i18n/utils'
import { dataClient } from '../cms-integration/data-client'
import type { SanityImageSource } from '@sanity/image-url/lib/types/types'
import { urlsForImage } from '../cms-integration/image-util'
import { getSeoAsync } from '../cms-integration/seo-client'
import BaseLayout from './BaseLayout.astro'
import Artwork from '../works/artwork.astro'
import { languages } from '../i18n/ui'
import { getLangFromUrl } from '../i18n/utils'

interface I18nString {
  no: string
  en: string
}

interface ArtworkDto {
  dimmenstions: string
  material: I18nString
  photo: { alt: I18nString; image: SanityImageSource }
  title: I18nString
  year: string
}

function mapArtworkDtoToVm(dto: ArtworkDto, lang: keyof typeof languages ) {
  const { title, dimmenstions, year, photo, material } = dto
  return {
    title: title[lang],
    dimmenstions: dimmenstions,
    material: material[lang],
    year: year,
    alt: photo.alt[lang],
    urls: urlsForImage(photo.image),
  }
}

export async function getArtworks(): Promise<ArtworkDto[]> {
  const query = `*[_type == "gallery"][0]{galleryImages[]->}`
  const artworks = await dataClient.fetch<{
    galleryImages: ArtworkDto[] | undefined
  }>(query)
  if (artworks?.galleryImages) {
    return artworks.galleryImages
  }
  return []
}
const { keywords, description } = await getSeoAsync()
const language = getLangFromUrl(Astro.url);
const artworkDtos = await getArtworks()
const artworks = artworkDtos.map(artwork => mapArtworkDtoToVm(artwork, language));
const t = useTranslation(language);
const title = t('title.home')
---

<BaseLayout
  title={title}
  keywords={keywords}
  description={description}>
  <section class="wrapper">
    {
      artworks.map(({ title, urls, alt, material, dimmenstions, year }) => (
        <Artwork
          title={title}
          urls={urls}
          alt={alt}
          material={material}
          dimmenstions={dimmenstions}
          year={year}
        />
      ))
    }
  </section>
</BaseLayout>
<style>
    .wrapper {
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        gap: 6rem;
        max-width: 100vw;
        margin-bottom: 4rem;
    }

    @media screen and (min-width: 800px) {
        .wrapper {
            flex-direction: row;
            flex-wrap: wrap;
            width: 120rem;
            gap: 4rem;
            justify-content: center;
        }
    }
</style>
